{"version":3,"sources":["webpack:///./src/DonateIframe.js","webpack:///./src/pages/donateiframe.js"],"names":["styles","container","display","flexDirection","alignItems","margin","homepageLink","color","fontFamily","bodyFontName","marginBottom","h2","headerFontName","headerLogoWrap","alignSelf","donateButton","backgroundColor","border","padding","width","cursor","columns","justifyContent","column","body","maxWidth","checkboxSection","checkboxArea","purchaseButton","purchaseButtonInactive","DonateScreen","state","handleInputChange","event","target","value","type","checked","setState","render","originalArray","classes","this","props","env","window","location","search","includes","pricesAsColumns","stripePrices","purchase","donate","filter","amt","className","map","index","key","amount","stripeId","StripeButton","successUrlSuffix","Component","DonateScreenPrepared","injectSheet","DonateScreenWrapped","componentDidMount","ready"],"mappings":"sOA2BA,IAAMA,EAAO,CACXC,UAAW,CACTC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,OAAQ,UAEVC,aAAc,CACZ,aAAa,CACXC,MAAO,OAETC,WAAYC,IACZC,aAAc,IAEhBC,GAAI,CACFH,WAAYI,KAEdC,eAAgB,CACdR,OAAO,sBACPS,UAAU,WAEZC,aAAc,CACZb,QAAS,QACTc,gBAAiB,UACjBT,MAAO,QACPU,OAAQ,OACRT,WAAYC,IACZJ,OAAQ,WACRa,QAAS,QACTC,MAAO,GACPC,OAAQ,WAEVC,QAAS,CACPnB,QAAS,OACTC,cAAe,MACfmB,eAAgB,SAChBjB,OAAQ,cACR,4BAA6B,CAC3BF,cAAe,WAGnBoB,OAAQ,GAGRC,KAAM,CACJC,SAAU,IACVpB,OAAQ,UAEVqB,gBAAiB,CACfxB,QAAS,OACTC,cAAe,SACfC,WAAY,SACZY,gBAAiB,OACjBE,QAAS,IAEXS,aAAc,CACZzB,QAAS,OACTC,cAAe,MACfC,WAAW,SACXkB,eAAgB,SAChBN,gBAAiB,OACjBE,QAAS,IAEXU,eAAgB,CACd1B,QAAS,QACTc,gBAAiB,UACjBT,MAAO,QACPU,OAAQ,OACRT,WAAYC,IACZJ,OAAQ,WACRa,QAAS,WAETE,OAAQ,YAIZpB,EAAO6B,uBAAP,iBACK7B,EAAO4B,eADZ,CAEEZ,gBAAiB,S,IAKbc,E,oJACJC,MAAQ,G,EACRC,kBAAoB,SAACC,GACnB,IAAMC,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MACnE,EAAKG,SAAS,CAACD,QAASF,K,sCAE1BI,OAAA,WACE,IAnGiCC,EAmG1BC,EAAWC,KAAKC,MAAhBF,QAEDG,EADQC,OAAOC,SAASC,OAAOC,SAAS,WAC1B,MAAQ,OAEtBC,GADeC,IAAaN,GAAKO,SAAS,GAlG3C,EAJ4BX,EAuGmBU,IAAaN,GAAKQ,QAtG7CC,QAAO,wBAAiB,OAClCb,EAAca,QAAO,gBAAEC,EAAF,YAAWA,EAAM,IAAMA,EAAM,OACjDd,EAAca,QAAO,wBAAiB,SAqGtD,OACE,yBAAKE,UAAWd,EAAQxC,WACtB,yBAAKsD,UAAWd,EAAQpB,SAEpB4B,EAAgBO,KAAI,SAACjC,EAAOkC,GAC1B,OACE,yBAAKF,UAAWd,EAAQlB,OAAQmC,IAAKD,GAEjClC,EAAOiC,KAAI,YAAwB,IAAtBG,EAAqB,KAAdC,EAAc,KAChC,OACE,kBAACC,EAAA,EAAD,CACEH,IAAKE,EACLD,OAAQA,EACRC,SAAUA,EACVE,iBAAiB,0BAUnC,6F,GArCmBC,aA4CrBC,EAAuBC,kBAAYjE,EAAZiE,CAAoBnC,GAclCoC,E,oJAXbnC,MAAQ,G,8CACRoC,kBAAA,WACEzB,KAAKJ,SAAS,CACZ8B,OAAO,K,EAGX7B,OAAA,WACE,OAAOG,KAAKX,MAAMqC,MAAQ,kBAACJ,EAAD,MAA2B,M,GARvBD,aC1JnBjC","file":"component---src-pages-donateiframe-js-4efa4b6e8bb2dd23bdf5.js","sourcesContent":["import React, {Component} from \"react\"\nimport { Link } from \"gatsby\"\nimport { loadStripe } from '@stripe/stripe-js';\nimport Markdown from 'react-markdown';\nimport injectSheet from 'react-jss';\nimport PageLayout from './PageLayout'\nimport {\n  headerFontName,\n  bodyFontName,\n  panelBgColor,\n  linkColor,\n} from './constants';\nimport stripePrices from './stripePrices';\nimport StripeButton from './StripeButton';\n\n\n\n\n\nfunction splitPricesIntoColumnArrays(originalArray){\n  const tens = originalArray.filter(([amt]) => amt < 100);\n  const hundreds = originalArray.filter(([amt]) => amt > 99 && amt < 1000);\n  const thousands = originalArray.filter(([amt]) => amt > 999);\n  return [tens,hundreds,thousands];\n}\n\n\nconst styles={\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: '0 20px',\n  },\n  homepageLink: {\n    '&:any-link':{\n      color: 'red'\n    },\n    fontFamily: bodyFontName,\n    marginBottom: 40,\n  },\n  h2: {\n    fontFamily: headerFontName,\n  },\n  headerLogoWrap: {\n    margin:'80px 80px 20px 80px',\n    alignSelf:'stretch',\n  },\n  donateButton: {\n    display: 'block',\n    backgroundColor: '#50c878',\n    color: 'white',\n    border: 'none',\n    fontFamily: bodyFontName,\n    margin: '7px 15px',\n    padding: '7px 0',\n    width: 90,\n    cursor: 'pointer',\n  },\n  columns: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    margin: '0 20px 30px',\n    '@media (max-width: 475px)': {\n      flexDirection: 'column',\n    },\n  },\n  column: {\n\n  },\n  body: {\n    maxWidth: 800,\n    margin: '0 30px',\n  },\n  checkboxSection: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#ccc',\n    padding: 20,\n  },\n  checkboxArea: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems:'center',\n    justifyContent: 'center',\n    backgroundColor: '#aaa',\n    padding: 20,\n  },\n  purchaseButton: {\n    display: 'block',\n    backgroundColor: '#009933',\n    color: 'white',\n    border: 'none',\n    fontFamily: bodyFontName,\n    margin: '7px 15px',\n    padding: '7px 20px',\n    // width: 90,\n    cursor: 'pointer',\n  },\n};\n\nstyles.purchaseButtonInactive = {\n  ...styles.purchaseButton,\n  backgroundColor: '#999',\n};\n\n\n\nclass DonateScreen extends Component {\n  state = {};\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({checked: value});\n  };\n  render(){\n    const {classes} = this.props;\n    const isDev = window.location.search.includes('env=dev');\n    const env = isDev ? 'dev' : 'prod';\n    const plotPurchase = stripePrices[env].purchase[0];\n    const pricesAsColumns = splitPricesIntoColumnArrays(stripePrices[env].donate);\n    return (\n      <div className={classes.container}>\n        <div className={classes.columns}>\n          {\n            pricesAsColumns.map((column,index) => {\n              return (\n                <div className={classes.column} key={index}>\n                  {\n                    column.map(([amount,stripeId]) => {\n                      return (\n                        <StripeButton\n                          key={stripeId}\n                          amount={amount}\n                          stripeId={stripeId}\n                          successUrlSuffix=\"donatesuccess\"\n                        />\n                      );\n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n        <p>If you have any problems, email info@newleaf-restoration.org</p>\n      </div>\n    );\n  }\n}\n\n\nconst DonateScreenPrepared = injectSheet(styles)(DonateScreen);\n\nclass DonateScreenWrapped extends Component {\n  state = {};\n  componentDidMount(){\n    this.setState({\n      ready: true,\n    });\n  }\n  render(){\n    return this.state.ready ? <DonateScreenPrepared /> : null;\n  }\n}\n\nexport default DonateScreenWrapped;\n","import DonateScreen from '../DonateIframe';\n\nexport default DonateScreen\n"],"sourceRoot":""}